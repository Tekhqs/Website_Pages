(function(b,a){a("util/text-metrics",["kendo.core"],b);
}(function(){(function(a){window.kendo.util=window.kendo.util||{};
var e=kendo.Class.extend({init:function(j){this._size=j;
this._length=0;
this._map={};
},put:function(k,m){var l=this._map;
var j={key:k,value:m};
l[k]=j;
if(!this._head){this._head=this._tail=j;
}else{this._tail.newer=j;
j.older=this._tail;
this._tail=j;
}if(this._length>=this._size){l[this._head.key]=null;
this._head=this._head.newer;
this._head.older=null;
}else{this._length++;
}},get:function(k){var j=this._map[k];
if(j){if(j===this._head&&j!==this._tail){this._head=j.newer;
this._head.older=null;
}if(j!==this._tail){if(j.older){j.older.newer=j.newer;
j.newer.older=j.older;
}j.older=this._tail;
j.newer=null;
this._tail.newer=j;
this._tail=j;
}return j.value;
}}});
function g(k){var l=[];
for(var j in k){l.push(j+k[j]);
}return l.sort().join("");
}function d(l){var j=2166136261;
for(var k=0;
k<l.length;
++k){j+=(j<<1)+(j<<4)+(j<<7)+(j<<8)+(j<<24);
j^=l.charCodeAt(k);
}return j>>>0;
}function i(){return{width:0,height:0,baseline:0};
}var b={baselineMarkerSize:1};
var c;
if(typeof document!=="undefined"){c=document.createElement("div");
c.style.cssText="position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;padding: 0 !important; margin: 0 !important; border: 0 !important;line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;";
}var h=kendo.Class.extend({init:function(j){this._cache=new e(1000);
this.options=a.extend({},b,j);
},measure:function(s,q,k){if(!s){return i();
}var r=g(q);
var m=d(s+r);
var l=this._cache.get(m);
if(l){return l;
}var p=i();
var o=k||c;
var j=this._baselineMarker().cloneNode(false);
for(var n in q){var t=q[n];
if(typeof t!=="undefined"){o.style[n]=t;
}}o.textContent=s;
o.appendChild(j);
document.body.appendChild(o);
if(String(s).length){p.width=o.offsetWidth-this.options.baselineMarkerSize;
p.height=o.offsetHeight;
p.baseline=j.offsetTop+this.options.baselineMarkerSize;
}if(p.width>0&&p.height>0){this._cache.put(m,p);
}o.parentNode.removeChild(o);
return p;
},_baselineMarker:function(){var j=document.createElement("div");
j.style.cssText="display: inline-block; vertical-align: baseline;width: "+this.options.baselineMarkerSize+"px; height: "+this.options.baselineMarkerSize+"px;overflow: hidden;";
return j;
}});
h.current=new h();
function f(l,k,j){return h.current.measure(l,k,j);
}kendo.deepExtend(kendo.util,{LRUCache:e,TextMetrics:h,measureText:f,objectKey:g,hashKey:d});
}(window.kendo.jQuery));
},typeof define=="function"&&define.amd?define:function(a,b,c){(c||b)();
}));
(function(b,a){a("kendo.dataviz.treemap",["kendo.data","kendo.userevents","kendo.dataviz.themes"],b);
}(function(){var a={id:"dataviz.treeMap",name:"TreeMap",category:"dataviz",description:"The Kendo DataViz TreeMap",depends:["data","userevents","dataviz.themes"]};
(function(b,L){var u=Math,B=b.proxy,r=b.isArray,t=window.kendo,z=t._outerHeight,A=t._outerWidth,e=t.Class,N=t.ui.Widget,J=t.template,m=t.deepExtend,q=t.data.HierarchicalDataSource,p=t.getter,k=t.dataviz;
var y=".kendoTreeMap",d="change",j="dataBound",s="itemCreated",v=Number.MAX_VALUE,x="mouseover"+y,w="mouseleave"+y,M="undefined";
var K=N.extend({init:function(O,P){t.destroy(O);
b(O).empty();
N.fn.init.call(this,O,P);
this.wrapper=this.element;
this._initTheme(this.options);
this.element.addClass("k-widget k-treemap");
this._setLayout();
this._originalOptions=m({},this.options);
this._initDataSource();
this._attachEvents();
t.notify(this,k.ui);
},options:{name:"TreeMap",theme:"default",autoBind:true,textField:"text",valueField:"value",colorField:"color"},events:[j,s],_initTheme:function(O){var P=this,S=k.ui.themes||{},Q=((O||{}).theme||"").toLowerCase(),R=(S[Q]||{}).treeMap;
P.options=m({},R,O);
},_attachEvents:function(){this.element.on(x,B(this._mouseover,this)).on(w,B(this._mouseleave,this));
this._resizeHandler=B(this.resize,this,false);
t.onResize(this._resizeHandler);
},_setLayout:function(){if(this.options.type==="horizontal"){this._layout=new F(false);
this._view=new G(this,this.options);
}else{if(this.options.type==="vertical"){this._layout=new F(true);
this._view=new G(this,this.options);
}else{this._layout=new H();
this._view=new I(this,this.options);
}}},_initDataSource:function(){var Q=this,P=Q.options,O=P.dataSource;
Q._dataChangeHandler=B(Q._onDataChange,Q);
Q.dataSource=q.create(O).bind(d,Q._dataChangeHandler);
if(O){if(Q.options.autoBind){Q.dataSource.fetch();
}}},setDataSource:function(O){var P=this;
P.dataSource.unbind(d,P._dataChangeHandler);
P.dataSource=O.bind(d,P._dataChangeHandler);
if(O){if(P.options.autoBind){P.dataSource.fetch();
}}},_onDataChange:function(O){var T=O.node;
var S=O.items;
var U=this.options;
var R,Q;
if(!T){this._cleanItems();
this.element.empty();
R=this._wrapItem(S[0]);
this._layout.createRoot(R,A(this.element),z(this.element),this.options.type==="vertical");
this._view.createRoot(R);
this._root=R;
this._colorIdx=0;
}else{if(S.length){var V=this._getByUid(T.uid);
V.children=[];
S=new t.data.Query(S)._sortForGrouping(U.valueField,"desc");
for(Q=0;
Q<S.length;
Q++){R=S[Q];
V.children.push(this._wrapItem(R));
}var P=this._view.htmlSize(V);
this._layout.compute(V.children,V.coord,P);
this._setColors(V.children);
this._view.render(V);
}}for(Q=0;
Q<S.length;
Q++){S[Q].load();
}if(T){this.trigger(j,{node:T});
}},_cleanItems:function(){var O=this;
O.angular("cleanup",function(){return{elements:O.element.find(".k-leaf div,.k-treemap-title,.k-treemap-title-vertical")};
});
},_setColors:function(U){var R=this.options.colors;
var P=this._colorIdx;
var O=R[P%R.length];
var Q,T;
if(r(O)){Q=h(O[0],O[1],U.length);
}var V=false;
for(var S=0;
S<U.length;
S++){T=U[S];
if(!n(T.color)){if(Q){T.color=Q[S];
}else{T.color=O;
}}if(!T.dataItem.hasChildren){V=true;
}}if(V){this._colorIdx++;
}},_contentSize:function(O){this.view.renderHeight(O);
},_wrapItem:function(O){var P={};
if(n(this.options.valueField)){P.value=o(this.options.valueField,O);
}if(n(this.options.colorField)){P.color=o(this.options.colorField,O);
}if(n(this.options.textField)){P.text=o(this.options.textField,O);
}P.level=O.level();
P.dataItem=O;
return P;
},_getByUid:function(Q){var P=[this._root];
var O;
while(P.length){O=P.pop();
if(O.dataItem.uid===Q){return O;
}if(O.children){P=P.concat(O.children);
}}},dataItem:function(P){var Q=b(P).attr(t.attr("uid")),O=this.dataSource;
return O&&O.getByUid(Q);
},findByUid:function(O){return this.element.find(".k-treemap-tile["+t.attr("uid")+"='"+O+"']");
},_mouseover:function(O){var P=b(O.target);
if(P.hasClass("k-leaf")){this._removeActiveState();
P.removeClass("k-state-hover").addClass("k-state-hover");
}},_removeActiveState:function(){this.element.find(".k-state-hover").removeClass("k-state-hover");
},_mouseleave:function(){this._removeActiveState();
},destroy:function(){N.fn.destroy.call(this);
this.element.off(y);
if(this.dataSource){this.dataSource.unbind(d,this._dataChangeHandler);
}this._root=null;
t.unbindResize(this._resizeHandler);
t.destroy(this.element);
},items:function(){return b();
},getSize:function(){return t.dimensions(this.element);
},_resize:function(){var P=this._root;
if(P){var O=this.element;
var Q=O.children();
P.coord.width=A(O);
P.coord.height=z(O);
Q.css({width:P.coord.width,height:P.coord.height});
this._resizeItems(P,Q);
}},_resizeItems:function(T,Q){if(T.children&&T.children.length){var R=Q.children(".k-treemap-wrap").children();
var O,P;
this._layout.compute(T.children,T.coord,{text:this._view.titleSize(T,Q)});
for(var S=0;
S<T.children.length;
S++){O=T.children[S];
P=R.filter("["+t.attr("uid")+"='"+O.dataItem.uid+"']");
this._view.setItemSize(O,P);
this._resizeItems(O,P);
}}},setOptions:function(P){var O=P.dataSource;
P.dataSource=L;
this._originalOptions=m(this._originalOptions,P);
this.options=m({},this._originalOptions);
this._setLayout();
this._initTheme(this.options);
N.fn._setEvents.call(this,P);
if(O){this.setDataSource(q.create(O));
}if(this.options.autoBind){this.dataSource.fetch();
}}});
var H=e.extend({createRoot:function(P,Q,O){P.coord={width:Q,height:O,top:0,left:0};
},leaf:function(O){return !O.children;
},layoutChildren:function(R,O){var U=O.width*O.height;
var W=0,S=[],Q;
for(Q=0;
Q<R.length;
Q++){S[Q]=parseFloat(R[Q].value);
W+=S[Q];
}for(Q=0;
Q<S.length;
Q++){R[Q].area=U*S[Q]/W;
}var T=this.layoutHorizontal()?O.height:O.width;
var P=[R[0]];
var V=R.slice(1);
this.squarify(V,P,T,O);
},squarify:function(Q,P,R,O){this.computeDim(Q,P,R,O);
},computeDim:function(T,R,U,O){if(T.length+R.length==1){var P=T.length==1?T:R;
this.layoutLast(P,U,O);
return;
}if(T.length>=2&&R.length===0){R=[T[0]];
T=T.slice(1);
}if(T.length===0){if(R.length>0){this.layoutRow(R,U,O);
}return;
}var Q=T[0];
if(this.worstAspectRatio(R,U)>=this.worstAspectRatio([Q].concat(R),U)){this.computeDim(T.slice(1),R.concat([Q]),U,O);
}else{var S=this.layoutRow(R,U,O);
this.computeDim(T,[],S.dim,S);
}},layoutLast:function(P,Q,O){P[0].coord=O;
},layoutRow:function(P,Q,O){if(this.layoutHorizontal()){return this.layoutV(P,Q,O);
}else{return this.layoutH(P,Q,O);
}},orientation:"h",layoutVertical:function(){return this.orientation==="v";
},layoutHorizontal:function(){return this.orientation==="h";
},layoutChange:function(){this.orientation=this.layoutVertical()?"h":"v";
},worstAspectRatio:function(R,U){if(!R||R.length===0){return v;
}var P=0,S=0,T=v;
for(var Q=0;
Q<R.length;
Q++){var O=R[Q].area;
P+=O;
T=T<O?T:O;
S=S>O?S:O;
}return u.max(U*U*S/(P*P),P*P/(U*U*T));
},compute:function(O,R,P){if(!(R.width>=R.height&&this.layoutHorizontal())){this.layoutChange();
}if(O&&O.length>0){var Q={width:R.width,height:R.height-P.text,top:0,left:0};
this.layoutChildren(O,Q);
}},layoutV:function(S,V,P){var U=this._totalArea(S),T=0;
V=E(U/V);
for(var R=0;
R<S.length;
R++){var Q=E(S[R].area/V);
S[R].coord={height:Q,width:V,top:P.top+T,left:P.left};
T+=Q;
}var O={height:P.height,width:P.width-V,top:P.top,left:P.left+V};
O.dim=u.min(O.width,O.height);
if(O.dim!=O.height){this.layoutChange();
}return O;
},layoutH:function(S,W,P){var V=this._totalArea(S);
var Q=E(V/W),U=P.top,T=0;
for(var R=0;
R<S.length;
R++){S[R].coord={height:Q,width:E(S[R].area/Q),top:U,left:P.left+T};
T+=S[R].coord.width;
}var O={height:P.height-Q,width:P.width,top:P.top+Q,left:P.left};
O.dim=u.min(O.width,O.height);
if(O.dim!=O.width){this.layoutChange();
}return O;
},_totalArea:function(P){var Q=0;
for(var O=0;
O<P.length;
O++){Q+=P[O].area;
}return Q;
}});
var I=e.extend({init:function(P,O){this.options=m({},this.options,O);
this.treeMap=P;
this.element=b(P.element);
this.offset=0;
},titleSize:function(P,O){var Q=O.children(".k-treemap-title");
return Q.height();
},htmlSize:function(P){var Q=this._getByUid(P.dataItem.uid);
var O={text:0};
if(P.children){this._clean(Q);
var R=this._getText(P);
if(R){var S=this._createTitle(P);
Q.append(S);
this._compile(S,P.dataItem);
O.text=S.height();
}Q.append(this._createWrap());
this.offset=(A(Q)-Q.innerWidth())/2;
}return O;
},_compile:function(P,O){this.treeMap.angular("compile",function(){return{elements:P,data:[{dataItem:O}]};
});
},_getByUid:function(O){return this.element.find(".k-treemap-tile["+t.attr("uid")+"='"+O+"']");
},render:function(S){var T=this._getByUid(S.dataItem.uid);
var O=S.children;
if(O){var U=T.find(".k-treemap-wrap");
for(var Q=0;
Q<O.length;
Q++){var R=O[Q];
var P=this._createLeaf(R);
U.append(P);
this._compile(P.children(),R.dataItem);
this.treeMap.trigger(s,{element:P});
}}},createRoot:function(P){var O=this._createLeaf(P);
this.element.append(O);
this._compile(O.children(),P.dataItem);
this.treeMap.trigger(s,{element:O});
},_clean:function(O){this.treeMap.angular("cleanup",function(){return{elements:O.children(":not(.k-treemap-wrap)")};
});
O.css("background-color","");
O.removeClass("k-leaf");
O.removeClass("k-inverse");
O.empty();
},_createLeaf:function(O){return this._createTile(O).css("background-color",O.color).addClass("k-leaf").toggleClass("k-inverse",this._tileColorBrightness(O)>180).append(b("<div></div>").html(this._getText(O)));
},_createTile:function(O){var P=b("<div class='k-treemap-tile'></div>");
this.setItemSize(O,P);
if(n(O.dataItem)&&n(O.dataItem.uid)){P.attr(t.attr("uid"),O.dataItem.uid);
}return P;
},_itemCoordinates:function(P){var O={width:P.coord.width,height:P.coord.height,left:P.coord.left,top:P.coord.top};
if(O.left&&this.offset){O.width+=this.offset*2;
}else{O.width+=this.offset;
}if(O.top){O.height+=this.offset*2;
}else{O.height+=this.offset;
}return O;
},setItemSize:function(Q,P){var O=this._itemCoordinates(Q);
P.css({width:O.width,height:O.height,left:O.left,top:O.top});
},_getText:function(O){var P=O.text;
if(this.options.template){P=this._renderTemplate(O);
}return P;
},_renderTemplate:function(O){var P=J(this.options.template);
return P({dataItem:O.dataItem,text:O.text});
},_createTitle:function(O){return b("<div class='k-treemap-title'></div>").append(b("<div></div>").html(this._getText(O)));
},_createWrap:function(){return b("<div class='k-treemap-wrap'></div>");
},_tileColorBrightness:function(O){return f(O.color);
}});
var F=e.extend({createRoot:function(P,R,O,Q){P.coord={width:R,height:O,top:0,left:0};
P.vertical=Q;
},init:function(O){this.vertical=O;
this.quotient=O?1:0;
},compute:function(O,S,Q){if(O.length>0){var T=S.width;
var P=S.height;
if(this.vertical){P-=Q.text;
}else{T-=Q.text;
}var R={width:T,height:P,top:0,left:0};
this.layoutChildren(O,R);
}},layoutChildren:function(R,O){var T=O.width*O.height;
var U=0;
var S=[];
var P;
for(P=0;
P<R.length;
P++){var Q=R[P];
S[P]=parseFloat(R[P].value);
U+=S[P];
Q.vertical=this.vertical;
}for(P=0;
P<S.length;
P++){R[P].area=T*S[P]/U;
}this.sliceAndDice(R,O);
},sliceAndDice:function(P,O){var Q=this._totalArea(P);
if(P[0].level%2===this.quotient){this.layoutHorizontal(P,O,Q);
}else{this.layoutVertical(P,O,Q);
}},layoutHorizontal:function(R,O,T){var S=0;
for(var P=0;
P<R.length;
P++){var Q=R[P];
var U=Q.area/(T/O.width);
Q.coord={height:O.height,width:U,top:O.top,left:O.left+S};
S+=U;
}},layoutVertical:function(S,O,U){var T=0;
for(var Q=0;
Q<S.length;
Q++){var R=S[Q];
var P=R.area/(U/O.height);
R.coord={height:P,width:O.width,top:O.top+T,left:O.left};
T+=P;
}},_totalArea:function(P){var Q=0;
for(var O=0;
O<P.length;
O++){Q+=P[O].area;
}return Q;
}});
var G=I.extend({htmlSize:function(P){var Q=this._getByUid(P.dataItem.uid);
var O={text:0,offset:0};
if(P.children){this._clean(Q);
var R=this._getText(P);
if(R){var S=this._createTitle(P);
Q.append(S);
this._compile(S,P.dataItem);
if(P.vertical){O.text=S.height();
}else{O.text=S.width();
}}Q.append(this._createWrap());
this.offset=(A(Q)-Q.innerWidth())/2;
}return O;
},titleSize:function(P,O){var Q;
if(P.vertical){Q=O.children(".k-treemap-title").height();
}else{Q=O.children(".k-treemap-title-vertical").width();
}return Q;
},_createTitle:function(O){var P;
if(O.vertical){P=b("<div class='k-treemap-title'></div>");
}else{P=b("<div class='k-treemap-title-vertical'></div>");
}return P.append(b("<div></div>").html(this._getText(O)));
}});
function o(O,Q){if(Q===null){return Q;
}var P=p(O,true);
return P(Q);
}function n(O){return typeof O!==M;
}function h(U,S,R){var V=C(U);
var T=C(S);
var Q=f(U)-f(S)<0;
var O=[];
O.push(U);
for(var P=0;
P<R;
P++){var W={r:g(V.r,T.r,P,R,Q),g:g(V.g,T.g,P,R,Q),b:g(V.b,T.b,P,R,Q)};
O.push(c(W));
}O.push(S);
return O;
}function g(V,T,Q,S,R){var W=u.min(u.abs(V),u.abs(T));
var U=u.max(u.abs(V),u.abs(T));
var X=(U-W)/(S+1);
var P=X*(Q+1);
var O;
if(R){O=W+P;
}else{O=U-P;
}return O;
}function c(O){return"#"+l(O.r)+l(O.g)+l(O.b);
}function C(O){O=O.replace("#","");
var P=i(O);
return{r:D(P.r),g:D(P.g),b:D(P.b)};
}function l(O){var P=u.round(O).toString(16).toUpperCase();
if(P.length===1){P="0"+P;
}return P;
}function i(O){var P=O.length;
var Q={};
if(P===3){Q.r=O[0];
Q.g=O[1];
Q.b=O[2];
}else{Q.r=O.substring(0,2);
Q.g=O.substring(2,4);
Q.b=O.substring(4,6);
}return Q;
}function D(O){return parseInt(O.toString(16),16);
}function f(P){var O=0;
if(P){P=C(P);
O=u.sqrt(0.241*P.r*P.r+0.691*P.g*P.g+0.06800000000000001*P.b*P.b);
}return O;
}function E(P){var O=u.pow(10,4);
return u.round(P*O)/O;
}k.ui.plugin(K);
}(window.kendo.jQuery));
return window.kendo;
},typeof define=="function"&&define.amd?define:function(a,b,c){(c||b)();
}));
